mode: rule
allow-lan: true
unified-delay: true
bind-address: '*'
log-level: silent
ipv6: false
geodata-mode: true
external-controller: 0.0.0.0:9090
external-ui: dashboard/dist
tcp-concurrent: true
interface-name: ""
enable-process: false
geodata-loader: memconservative
inbound-tfo: false
secret: ""
profile:
  store-selected: true
  store-fake-ip: false
geox-url: {mmdb: "https://cdn.jsdelivr.net/gh/Dreamacro/maxmind-geoip@release/Country.mmdb", geoip: "https://github.com/v2fly/geoip/releases/latest/download/geoip-only-cn-private.dat", geosite: "https://github.com/taamarin/v2ray-rules-dat/raw/release/geosite.dat"}
tun:
  enable: false
  stack: system
  dns-hijack:
    - any:53
  auto-route: true
  auto-detect-interface: true
sniffer:
  enable: false
  sniffing:
    - tls
    - http
  force-domain:
    - '+'
  skip-domain:
    - '+.google.com'
  port-whitelist:
    - 443
    - 80
dns:
  enable: true
  device: Meta
  ipv6: true
  prefer-h3: true #start DOH to use http/3 first
  default-nameserver:
    - 1.1.1.1
    - 94.140.14.14
  listen: 0.0.0.0:1053
  use-hosts: true
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter:
    - "*.local"
    - "*.localhost"
    - "dns.*"
    - "dns.*.*"
    - "networktest.twilio.com"
    - "+.twilio.com"
  nameserver:
    - 9.9.9.9
    - 8.8.8.8
    - 149.112.112.112
  fallback:
    - 8.8.8.8
    - 1.1.1.1
  fallback-filter:
    geoip: false
    geoip-code: "ID"
    geosite: []
    ipcidr: []
    domain:
      - '+.google.com'
      - '+.facebook.com'
      - '+.youtube.com'
hosts:
  'ota.googlezip.net': 127.0.0.1
  'cacerts.digicert.com': 104.21.21.147
tproxy-port: 9898
proxies:
  - name: TSP-FREE
    server: sgo-2.herbalv2ray.me
    port: 80
    type: vmess
    uuid: AKUN-VMESS
    alterId: 0
    cipher: auto
    tls: false
    skip-cert-verify: true
    servername: 
    network: ws
    ws-opts:
      path: /worryfree
      headers:
        Host: tsel.me
    udp: true
  - name: TSP-FREE-X2
    server: sg2-temp.v2-ray.com
    port: 80
    type: vmess
    uuid: AKUN-VMESS
    alterId: 0
    cipher: auto
    tls: false
    skip-cert-verify: true
    servername: 
    network: ws
    ws-opts:
      path: /worryfree/
      headers:
        Host: tsel.me
    udp: true
proxy-groups:
  - name: MAIN-SERVER 🌍
    type: select
    proxies:
      - TSP-FREE
      - TSP-FREE-X2
      - DIRECT
  - name: BEST-PING 🎮
    type: url-test
    url: http://hi.bonds.id/ping
    interval: 300
    tolerance: 50
    proxies:
      - TSP-FREE
      - TSP-FREE-X2
      - DIRECT
  - name: LOAD-BALANCE ☁️
    type: load-balance
    strategy: consistent-hashing
    url: http://hi.bonds.id/ping
    interval: 300
    proxies:
      - TSP-FREE
      - TSP-FREE-X2
      - DIRECT
  - name: "GoodByeAds"
    type: select
    proxies: 
      - REJECT
      - PASS
rule-providers:
  🚫 Basic-ADS:
    type: http
    behavior: domain
    path: ./confs/rule/basicads.yaml
    url: 'https://raw.githubusercontent.com/malikshi/open_clash/main/rule_provider/rule_basicads.yaml'
    interval: 86300
  🚫 Personal-ADS:
    type: http
    behavior: classical
    path: ./confs/rule/personalads.yaml
    url: 'https://raw.githubusercontent.com/malikshi/open_clash/main/rule_provider/rule_personalads.yaml'
    interval: 86300
script:
  code: >
    def main(ctx, metadata):
        ruleset_action = {"Reject": "AdBlock",
            "🚫 Basic-ADS": "GoodByeAds",
            "🚫 Personal-ADS": "GoodByeAds"
          }
        port = int(metadata["dst_port"])
        if metadata["network"] == "UDP":
            if port == 443:
                ctx.log('[Script] matched QUIC traffic use reject')
                return "REJECT"
        port_list = [21, 22, 23, 53, 80, 123, 143, 194, 443, 465, 587, 853, 993, 995, 998, 2052, 2053, 2082, 2083, 2086, 2095, 2096, 5222, 5228, 5229, 5230, 8080, 8443, 8880, 8888, 8889]
        if port not in port_list:
            ctx.log('[Script] not common port use direct')
            return "DIRECT"
        if metadata["dst_ip"] == "":
            metadata["dst_ip"] = ctx.resolve_ip(metadata["host"])
        for ruleset in ruleset_action:
            if ctx.confs/rule[ruleset].match(metadata):
                return ruleset_action[ruleset]
        if metadata["dst_ip"] == "":
            return "DIRECT"
        code = ctx.geoip(metadata["dst_ip"])
        if code == "ID":
            ctx.log('[Script] GEOIP ID')
            return "Domestic"
        ctx.log('[Script] FINAL')
        return "REJECT"
rules:
  - RULE-SET,🚫 Basic-ADS,GoodByeAds,no-resolve
  - RULE-SET,🚫 Personal-ADS,GoodByeAds,no-resolve
  - GEOSITE,category-ads-all,GoodByeAds
  - PROCESS-NAME,com.mobile.legends,DIRECT
  - MATCH,MAIN-SERVER 🌍
